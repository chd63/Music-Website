{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MusicPlayer from '../MusicPlayer/MusicPlayer'; // Import the MusicPlayer component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n  const [songs, setSongs] = useState([]);\n  const [currentSongUrl, setCurrentSongUrl] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await axios.post(ENDPOINT + '/api/songs/homepagesongs');\n        setSongs(response.data.songs || []);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [ENDPOINT]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Song List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentSongUrl(song.streamId),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), currentSongUrl && /*#__PURE__*/_jsxDEV(MusicPlayer, {\n      currentSongUrl: currentSongUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"tc1jUeSyd5T0BrKoesajluPN5pk=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","MusicPlayer","jsxDEV","_jsxDEV","HomePage","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","songs","setSongs","currentSongUrl","setCurrentSongUrl","fetchSongs","response","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","title","onClick","streamId","songId","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MusicPlayer from '../MusicPlayer/MusicPlayer'; // Import the MusicPlayer component\n\nfunction HomePage() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n    const [songs, setSongs] = useState([]);\n    const [currentSongUrl, setCurrentSongUrl] = useState(null);\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await axios.post(ENDPOINT + '/api/songs/homepagesongs');\n                setSongs(response.data.songs || []);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [ENDPOINT]);\n\n    return (\n        <div className=\"home-page\">\n            <h1>Song List</h1>\n            <div className=\"song-list\">\n                {songs.map((song) => (\n                    <div key={song.songId} className=\"song-block\">\n                        <h2>{song.title}</h2>\n                        <button onClick={() => setCurrentSongUrl(song.streamId)}>Play</button>\n                    </div>\n                ))}\n            </div>\n            {/* Pass the current song URL to the MusicPlayer component */}\n            {currentSongUrl && <MusicPlayer currentSongUrl={currentSongUrl} />}\n        </div>\n    );\n}\n\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACV,QAAQ,GAAG,0BAA0B,CAAC;QACxEK,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACP,KAAK,IAAI,EAAE,CAAC;MACvC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBX,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZxB,OAAA;QAAuBiB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzClB,OAAA;UAAAkB,QAAA,EAAKM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBtB,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACc,IAAI,CAACG,QAAQ,CAAE;UAAAT,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFhEE,IAAI,CAACI,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELb,cAAc,iBAAIT,OAAA,CAACF,WAAW;MAACW,cAAc,EAAEA;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd;AAACpB,EAAA,CAjCQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}