{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './MusicPlayer.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  songId\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [volume, setVolume] = useState(1); // Default volume is 100%\n  const audioRef = useRef(null);\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n  // Fetch the song's streaming URL when the songId changes\n  useEffect(() => {\n    const fetchSongStream = async () => {\n      try {\n        const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n          params: {\n            songId\n          },\n          responseType: 'blob' // Expect binary data from the backend\n        });\n\n        // Create a new audio URL for the new song stream\n        const audioBlob = response.data;\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl); // Set the audio URL to play the song\n      } catch (error) {\n        console.error('Error fetching song stream:', error);\n      }\n    };\n    if (songId) {\n      fetchSongStream();\n    }\n  }, [songId]); // Re-fetch when songId changes\n\n  // Play/Pause toggle\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(error => {\n        console.error('Error trying to play audio:', error);\n      });\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Change the volume of the audio element\n  const handleVolumeChange = event => {\n    const newVolume = event.target.value;\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume; // Adjust the volume of the audio element\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: audioUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: isPlaying ? 'square' : 'triangle',\n          onClick: togglePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"volume-slider\",\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"volume-slider\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: volume,\n            onChange: handleVolumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicPlayer, \"hCtxAyon3piqRSMxSX4OJkIpuOg=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicPlayer","songId","_s","isPlaying","setIsPlaying","audioUrl","setAudioUrl","volume","setVolume","audioRef","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","fetchSongStream","response","get","params","responseType","audioBlob","data","URL","createObjectURL","error","console","togglePlayPause","audio","current","pause","play","catch","handleVolumeChange","event","newVolume","target","value","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './MusicPlayer.css';  // Import the CSS for styling\n\nconst MusicPlayer = ({ songId }) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [audioUrl, setAudioUrl] = useState(null);\n    const [volume, setVolume] = useState(1); // Default volume is 100%\n    const audioRef = useRef(null);\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    // Fetch the song's streaming URL when the songId changes\n    useEffect(() => {\n        const fetchSongStream = async () => {\n            try {\n                const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n                    params: { songId },\n                    responseType: 'blob'  // Expect binary data from the backend\n                });\n\n                // Create a new audio URL for the new song stream\n                const audioBlob = response.data;\n                const audioUrl = URL.createObjectURL(audioBlob);\n                setAudioUrl(audioUrl); // Set the audio URL to play the song\n            } catch (error) {\n                console.error('Error fetching song stream:', error);\n            }\n        };\n\n        if (songId) {\n            fetchSongStream();\n        }\n    }, [songId]);  // Re-fetch when songId changes\n\n    // Play/Pause toggle\n    const togglePlayPause = () => {\n        const audio = audioRef.current;\n        if (isPlaying) {\n            audio.pause();\n        } else {\n            audio.play().catch((error) => {\n                console.error('Error trying to play audio:', error);\n            });\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    // Change the volume of the audio element\n    const handleVolumeChange = (event) => {\n        const newVolume = event.target.value;\n        setVolume(newVolume);\n        if (audioRef.current) {\n            audioRef.current.volume = newVolume; // Adjust the volume of the audio element\n        }\n    };\n\n    return (\n        <div className=\"music-player\">\n            {audioUrl && (\n                <>\n                    <audio ref={audioRef} src={audioUrl} />\n                    <div className=\"controls-container\">\n                        {/* Play Button */}\n                        <div\n                            className={isPlaying ? 'square' : 'triangle'}\n                            onClick={togglePlayPause}\n                        ></div>\n\n                        {/* Volume Control */}\n                        <div className=\"volume-control\">\n                            <label htmlFor=\"volume-slider\">Volume</label>\n                            <input\n                                id=\"volume-slider\"\n                                type=\"range\"\n                                min=\"0\"\n                                max=\"1\"\n                                step=\"0.01\"\n                                value={volume}\n                                onChange={handleVolumeChange}\n                            />\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default MusicPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMiB,QAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMiB,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;EAEnD;EACAnB,SAAS,CAAC,MAAM;IACZ,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACN,QAAQ,GAAG,2BAA2B,EAAE;UACrEO,MAAM,EAAE;YAAEhB;UAAO,CAAC;UAClBiB,YAAY,EAAE,MAAM,CAAE;QAC1B,CAAC,CAAC;;QAEF;QACA,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,IAAI;QAC/B,MAAMf,QAAQ,GAAGgB,GAAG,CAACC,eAAe,CAACH,SAAS,CAAC;QAC/Cb,WAAW,CAACD,QAAQ,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAED,IAAItB,MAAM,EAAE;MACRa,eAAe,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC,CAAC,CAAE;;EAEf;EACA,MAAMwB,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGjB,QAAQ,CAACkB,OAAO;IAC9B,IAAIxB,SAAS,EAAE;MACXuB,KAAK,CAACE,KAAK,CAAC,CAAC;IACjB,CAAC,MAAM;MACHF,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEP,KAAK,IAAK;QAC1BC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN;IACAnB,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM4B,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACpC3B,SAAS,CAACyB,SAAS,CAAC;IACpB,IAAIxB,QAAQ,CAACkB,OAAO,EAAE;MAClBlB,QAAQ,CAACkB,OAAO,CAACpB,MAAM,GAAG0B,SAAS,CAAC,CAAC;IACzC;EACJ,CAAC;EAED,oBACIpC,OAAA;IAAKuC,SAAS,EAAC,cAAc;IAAAC,QAAA,EACxBhC,QAAQ,iBACLR,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACIxC,OAAA;QAAOyC,GAAG,EAAE7B,QAAS;QAAC8B,GAAG,EAAElC;MAAS;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC9C,OAAA;QAAKuC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAE/BxC,OAAA;UACIuC,SAAS,EAAEjC,SAAS,GAAG,QAAQ,GAAG,UAAW;UAC7CyC,OAAO,EAAEnB;QAAgB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eAGP9C,OAAA;UAAKuC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BxC,OAAA;YAAOgD,OAAO,EAAC,eAAe;YAAAR,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7C9C,OAAA;YACIiD,EAAE,EAAC,eAAe;YAClBC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,GAAG;YACPC,IAAI,EAAC,MAAM;YACXf,KAAK,EAAE5B,MAAO;YACd4C,QAAQ,EAAEpB;UAAmB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACR;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzC,EAAA,CAlFIF,WAAW;AAAAoD,EAAA,GAAXpD,WAAW;AAoFjB,eAAeA,WAAW;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}