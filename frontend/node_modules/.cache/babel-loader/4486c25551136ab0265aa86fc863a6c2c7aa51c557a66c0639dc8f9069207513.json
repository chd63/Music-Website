{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js\",\n  _s = $RefreshSig$();\n// components/MusicPlayer.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MusicPlayer.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"/path/to/song.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isPlaying ? 'square' : 'triangle',\n        onClick: togglePlayPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(MusicPlayer, \"sL4xjVLmTF7f1+jWdlUm6K/Qvq0=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MusicPlayer","_s","isPlaying","setIsPlaying","audioRef","togglePlayPause","audio","current","pause","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js"],"sourcesContent":["// components/MusicPlayer.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MusicPlayer.css';  // Import the CSS for styling\n\nconst MusicPlayer = () => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const audioRef = useRef(null);\n  \n    const togglePlayPause = () => {\n      const audio = audioRef.current;\n      if (isPlaying) {\n        audio.pause();\n      } else {\n        audio.play();\n      }\n      setIsPlaying(!isPlaying);\n    };\n  \n    return (\n      <div className=\"music-player\">\n        <audio ref={audioRef} src=\"/path/to/song.mp3\"></audio>\n        <div className=\"button-container\">\n          <div className={isPlaying ? 'square' : 'triangle'} onClick={togglePlayPause}></div>\n        </div>\n      </div>\n    );\n  };\n  \n\nexport default MusicPlayer;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,mBAAmB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAGF,QAAQ,CAACG,OAAO;IAC9B,IAAIL,SAAS,EAAE;MACbI,KAAK,CAACE,KAAK,CAAC,CAAC;IACf,CAAC,MAAM;MACLF,KAAK,CAACG,IAAI,CAAC,CAAC;IACd;IACAN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BZ,OAAA;MAAOa,GAAG,EAAER,QAAS;MAACS,GAAG,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtDlB,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BZ,OAAA;QAAKW,SAAS,EAAER,SAAS,GAAG,QAAQ,GAAG,UAAW;QAACgB,OAAO,EAAEb;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBED,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}