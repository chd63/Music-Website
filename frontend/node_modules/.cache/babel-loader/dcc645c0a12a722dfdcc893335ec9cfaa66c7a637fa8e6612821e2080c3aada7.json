{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/upload/UploadSong.js\",\n  _s = $RefreshSig$();\nimport \"./UploadSong.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from \"../AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadSong() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n  const {\n    authToken,\n    id\n  } = useAuth();\n  const [errorMessage, setErrorMessage] = useState('');\n  //console.log(authToken);\n  //console.log(id);\n\n  // state to store a selected file\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [songTitle, setSongTitle] = useState('');\n  const [songDescription, setDescription] = useState('');\n\n  // Effect to set error message based on authToken\n  useEffect(() => {\n    if (authToken === null) {\n      setErrorMessage(\"You are not signed in. Please log in to upload a song.\");\n    } else {\n      setErrorMessage(''); // Clear error message if signed in\n    }\n  }, [authToken]);\n\n  // ref for file input\n  const fileInputRef = useRef(null);\n\n  // set null song title \n  const handleTitleChange = event => {\n    setSongTitle(event.target.value);\n  };\n\n  // set description\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  // handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (selectedFile && songTitle) {\n      // TODO : add an append data for user \n\n      // TODO : add an append data for the users\n      const formData = new FormData();\n      formData.append('id', id); // Add the user ID\n      formData.append('songTitle', songTitle); // Add the song title\n      formData.append('songDescription', songDescription || ''); // Add the song description\n      formData.append('selectedFile', selectedFile);\n\n      // temp for upload use\n      console.log('Form Data:', formData);\n\n      // TODO \n      try {\n        const response = await axios.post(ENDPOINT + \"/api/songs/create\", formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Set the proper content type\n          }\n        });\n        console.log('Upload response:', response.data);\n        clearInputs();\n        fileInputRef.current.value = null;\n        alert('File successfully uploaded!');\n      } catch (error) {\n        console.error('Error uploading song:', error);\n        alert('Error uploading file. Please try again.'); // Notify the user of the error\n      }\n    } else if (authToken === null) {\n      alert('you are not signed in so you can not upload a file');\n    } else {\n      alert('please select a file to upload');\n    }\n  };\n\n  // Function to clear the inputs\n  const clearInputs = () => {\n    setSelectedFile(null);\n    setSongTitle('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UploadSong\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please Enter A Song To Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), !authToken && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadFile\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter Song Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Song Title\",\n        value: songTitle,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Enter Description \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Description\",\n        value: songDescription,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected File: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UploadSong, \"vqp7thuLOgj0qhIJiNBN2I8l8TE=\", false, function () {\n  return [useAuth];\n});\n_c = UploadSong;\nexport default UploadSong;\nvar _c;\n$RefreshReg$(_c, \"UploadSong\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadSong","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","authToken","id","errorMessage","setErrorMessage","selectedFile","setSelectedFile","songTitle","setSongTitle","songDescription","setDescription","fileInputRef","handleTitleChange","event","target","value","handleDescriptionChange","handleFileChange","files","handleFileUpload","formData","FormData","append","console","log","response","post","headers","data","clearInputs","current","alert","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","onChange","ref","name","onClick","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/upload/UploadSong.js"],"sourcesContent":["import \"./UploadSong.css\";\nimport React, { useState, useEffect, useRef  } from 'react';\nimport {useAuth} from \"../AuthContext\";\nimport axios from \"axios\";\n\nfunction UploadSong() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    const { authToken, id } = useAuth();\n    const [errorMessage, setErrorMessage] = useState('');\n    //console.log(authToken);\n    //console.log(id);\n\n    \n    // state to store a selected file\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [songTitle, setSongTitle] = useState('');\n    const [songDescription, setDescription] = useState('');\n\n    // Effect to set error message based on authToken\n    useEffect(() => {\n        if (authToken === null) {\n            setErrorMessage(\"You are not signed in. Please log in to upload a song.\");\n        } else {\n            setErrorMessage(''); // Clear error message if signed in\n        }\n    }, [authToken]); \n\n    // ref for file input\n    const fileInputRef = useRef(null);\n\n    // set null song title \n    const handleTitleChange = (event) => {\n        setSongTitle(event.target.value);\n    };\n\n    // set description\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value);\n    };\n\n    // handle file selection\n    const handleFileChange = (event) =>{\n        setSelectedFile(event.target.files[0]);\n    };\n\n\n    const handleFileUpload = async () => {\n        if(selectedFile && songTitle)\n        {\n            // TODO : add an append data for user \n\n            // TODO : add an append data for the users\n            const formData = new FormData();\n            formData.append('id', id); // Add the user ID\n            formData.append('songTitle', songTitle); // Add the song title\n            formData.append('songDescription', songDescription || ''); // Add the song description\n            formData.append('selectedFile', selectedFile);\n\n            // temp for upload use\n            console.log('Form Data:', formData);\n\n            // TODO \n            try {\n                const response = await axios.post(ENDPOINT + \"/api/songs/create\", formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data', // Set the proper content type\n                    },\n                });\n                console.log('Upload response:', response.data);\n                clearInputs();\n                fileInputRef.current.value = null;\n                alert('File successfully uploaded!'); \n            } catch (error) {\n                console.error('Error uploading song:', error);\n                alert('Error uploading file. Please try again.'); // Notify the user of the error\n            }\n\n        }\n        else if(authToken === null)\n        {\n            alert('you are not signed in so you can not upload a file');\n        }\n        else\n        {\n            alert('please select a file to upload');\n        }\n    };\n\n    // Function to clear the inputs\n    const clearInputs = () => {\n        setSelectedFile(null);\n        setSongTitle('');\n        setDescription('');\n    };\n\n    return (\n\n        <>\n            <div className=\"UploadSong\">\n                <h1>Please Enter A Song To Upload</h1>\n            </div>\n            <br></br>\n            {!authToken && <p className=\"errorMessage\" style={{ color: 'red' }}>{errorMessage}</p>} {/* Display error message */}\n            <div className=\"uploadFile\">\n                <span>Enter Song Name </span>\n                <input\n                    type=\"text\" \n                    placeholder=\"Enter Song Title\"\n                    value={songTitle}\n                    onChange={handleTitleChange} \n                />\n                <br /><br />\n                <span>Enter Description </span>\n                <input\n                    type=\"text\" \n                    placeholder=\"Enter Description\"\n                    value={songDescription}\n                    onChange={handleDescriptionChange} \n                />\n                <br /><br />\n                <input type=\"file\"  ref={fileInputRef} onChange={handleFileChange} />\n                {selectedFile && <p>Selected File: {selectedFile.name}</p>}\n                <button onClick={handleFileUpload}>Upload</button>\n                \n            </div>\n        </>\n\n    );\n}\n\nexport default UploadSong;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}