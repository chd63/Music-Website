{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from \"../AuthContext\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n  // error messages and songs\n  const [songs, setSongs] = useState([]);\n  const handleSongCall = async () => {\n    axios.post(ENDPOINT + \"/api/songs/homepagesongs\").then(response => {\n      if (response.data.message === \"Success\") {\n        console.log(\"Songs retrieved successfully:\", response.data.songs);\n        setSongs(response.data.songs);\n      } else {\n        console.log(\"No songs found for this user\");\n      }\n    }).catch(error => {\n      console.error(\"Error retrieving songs:\", error);\n    });\n  };\n  const streamSongById = async songId => {\n    try {\n      // Make GET request with songId as query parameter\n      const response = await axios.get(`/api/songs/streamSongById`, {\n        params: {\n          songId\n        },\n        headers: {},\n        responseType: 'blob'\n      });\n\n      // Get the song's metadata from response headers\n      const songTitle = response.headers['x-song-title'];\n      const songDescription = response.headers['x-song-description'];\n      console.log('Song Title:', songTitle);\n      console.log('Song Description:', songDescription);\n\n      // Create a URL for the Blob (audio file)\n      const audioUrl = URL.createObjectURL(response.data);\n\n      // Create an audio element to play the song\n      const audioElement = new Audio(audioUrl);\n      audioElement.play();\n    } catch (error) {\n      console.error('Error streaming song:', error);\n    }\n  };\n  handleSongCall();\n  streamSongById(songs[0].id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"song-description\",\n          children: song.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(HomePage, \"Hsmq610c7FiVlHbOaM+zqc5zAoc=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","songs","setSongs","handleSongCall","post","then","response","data","message","console","log","catch","error","streamSongById","songId","get","params","headers","responseType","songTitle","songDescription","audioUrl","URL","createObjectURL","audioElement","Audio","play","id","children","className","length","map","song","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../AuthContext\";\nimport axios from \"axios\";\nimport {Link, useNavigate} from 'react-router-dom';\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    // error messages and songs\n    const [songs, setSongs] = useState([]);\n\n    const handleSongCall = async () => {\n        axios.post(ENDPOINT + \"/api/songs/homepagesongs\")\n        .then(response => {\n            if (response.data.message === \"Success\") {\n                console.log(\"Songs retrieved successfully:\", response.data.songs);\n                setSongs(response.data.songs);\n            } else {\n                console.log(\"No songs found for this user\");\n            }\n        })\n        .catch(error => {\n            console.error(\"Error retrieving songs:\", error);\n        });\n    }\n\n    const streamSongById = async (songId) => {\n        try {\n            // Make GET request with songId as query parameter\n            const response = await axios.get(`/api/songs/streamSongById`, {\n                params: { songId },\n                headers: {\n                },\n                responseType: 'blob', \n            });\n    \n            // Get the song's metadata from response headers\n            const songTitle = response.headers['x-song-title'];\n            const songDescription = response.headers['x-song-description'];\n    \n            console.log('Song Title:', songTitle);\n            console.log('Song Description:', songDescription);\n    \n            // Create a URL for the Blob (audio file)\n            const audioUrl = URL.createObjectURL(response.data);\n    \n            // Create an audio element to play the song\n            const audioElement = new Audio(audioUrl);\n            audioElement.play();\n        } catch (error) {\n            console.error('Error streaming song:', error);\n        }\n    };\n\n    handleSongCall();\n\n    streamSongById(songs[0].id);\n\n    return (\n        <>\n            <div className=\"song-list\">\n                {songs.length > 0 ? (\n                    songs.map((song) => (\n                        <div className=\"song-block\" key={song.songId}>\n                            <h2 className=\"song-title\">{song.title}</h2>\n                            <p className=\"song-description\">{song.description}</p>\n                            <button className=\"play-button\">Play</button>\n                        </div>\n                    ))\n                ) : (\n                    <p>No songs to display</p>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}