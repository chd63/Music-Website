{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './MusicPlayer.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  songId\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [volume, setVolume] = useState(1); // Default volume is 100%\n  const audioRef = useRef(null);\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n  // Fetch the song's streaming URL when the songId changes\n  useEffect(() => {\n    const fetchSongStream = async () => {\n      try {\n        const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n          params: {\n            songId\n          },\n          responseType: 'blob' // Expect binary data from the backend\n        });\n\n        // Cancel any previous requests (stop the previous song)\n        if (audioRef.current) {\n          audioRef.current.pause();\n          audioRef.current.currentTime = 0; // Reset to start of song\n        }\n\n        // Create a new audio URL for the new song stream\n        const audioBlob = response.data;\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl); // Set the audio URL to play the song\n      } catch (error) {\n        console.error('Error fetching song stream:', error);\n      }\n    };\n    if (songId) {\n      fetchSongStream();\n    }\n  }, [songId]); // Re-fetch when songId changes\n\n  useEffect(() => {\n    // When the song URL is ready, start playing the song\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load(); // Make sure the audio is loaded before playing\n      audioRef.current.play().catch(error => {\n        console.error('Error trying to play audio:', error);\n      });\n    }\n  }, [audioUrl]); // Trigger play whenever the song URL changes\n\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play().catch(error => {\n        console.error('Error trying to play audio:', error);\n      });\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Change the volume of the audio element\n  const handleVolumeChange = event => {\n    const newVolume = event.target.value;\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume; // Adjust the volume of the audio element\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: audioUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isPlaying ? 'square' : 'triangle',\n          onClick: togglePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"volume-slider\",\n          children: \"Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"volume-slider\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: handleVolumeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a song to play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicPlayer, \"3GZclPyRTHZA5Oe+4NJu4CDbDt8=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicPlayer","songId","_s","isPlaying","setIsPlaying","audioUrl","setAudioUrl","volume","setVolume","audioRef","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","fetchSongStream","response","get","params","responseType","current","pause","currentTime","audioBlob","data","URL","createObjectURL","error","console","load","play","catch","togglePlayPause","audio","handleVolumeChange","event","newVolume","target","value","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './MusicPlayer.css';  // Import the CSS for styling\n\nconst MusicPlayer = ({ songId }) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [audioUrl, setAudioUrl] = useState(null);\n    const [volume, setVolume] = useState(1); // Default volume is 100%\n    const audioRef = useRef(null);\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    // Fetch the song's streaming URL when the songId changes\n    useEffect(() => {\n        const fetchSongStream = async () => {\n            try {\n                const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n                    params: { songId },\n                    responseType: 'blob'  // Expect binary data from the backend\n                });\n\n                // Cancel any previous requests (stop the previous song)\n                if (audioRef.current) {\n                    audioRef.current.pause();\n                    audioRef.current.currentTime = 0;  // Reset to start of song\n                }\n\n                // Create a new audio URL for the new song stream\n                const audioBlob = response.data;\n                const audioUrl = URL.createObjectURL(audioBlob);\n                setAudioUrl(audioUrl); // Set the audio URL to play the song\n            } catch (error) {\n                console.error('Error fetching song stream:', error);\n            }\n        };\n\n        if (songId) {\n            fetchSongStream();\n        }\n    }, [songId]);  // Re-fetch when songId changes\n\n    useEffect(() => {\n        // When the song URL is ready, start playing the song\n        if (audioRef.current && audioUrl) {\n            audioRef.current.load();  // Make sure the audio is loaded before playing\n            audioRef.current.play().catch((error) => {\n                console.error('Error trying to play audio:', error);\n            });\n        }\n    }, [audioUrl]);  // Trigger play whenever the song URL changes\n\n    const togglePlayPause = () => {\n        const audio = audioRef.current;\n        if (isPlaying) {\n            audio.pause();\n        } else {\n            audio.play().catch((error) => {\n                console.error('Error trying to play audio:', error);\n            });\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    // Change the volume of the audio element\n    const handleVolumeChange = (event) => {\n        const newVolume = event.target.value;\n        setVolume(newVolume);\n        if (audioRef.current) {\n            audioRef.current.volume = newVolume; // Adjust the volume of the audio element\n        }\n    };\n\n    return (\n        <div className=\"music-player\">\n            {audioUrl ? (\n                <>\n                    <audio ref={audioRef} src={audioUrl} />\n                    <div className=\"button-container\">\n                        <div \n                            className={isPlaying ? 'square' : 'triangle'} \n                            onClick={togglePlayPause}\n                        ></div>\n                    </div>\n\n                    {/* Volume Control */}\n                    <div className=\"volume-control\">\n                        <label htmlFor=\"volume-slider\">Volume</label>\n                        <input\n                            id=\"volume-slider\"\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"1\"\n                            step=\"0.01\"\n                            value={volume}\n                            onChange={handleVolumeChange}\n                        />\n                    </div>\n                </>\n            ) : (\n                <p>Select a song to play</p>\n            )}\n        </div>\n    );\n};\n\nexport default MusicPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}