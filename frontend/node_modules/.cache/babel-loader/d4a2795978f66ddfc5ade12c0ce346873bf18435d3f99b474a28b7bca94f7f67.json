{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n  // State for songs, loading, and random song play\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [randomSong, setRandomSong] = useState(null);\n  useEffect(() => {\n    const handleSongCall = async () => {\n      try {\n        console.log(ENDPOINT);\n        const response = await axios.post(ENDPOINT + \"/api/songs/homepagesongs\");\n        if (response.data.message === \"Success\") {\n          console.log(\"Songs retrieved successfully:\", response.data.songs);\n          setSongs(response.data.songs);\n        } else {\n          console.log(\"No songs found for this user\");\n        }\n      } catch (error) {\n        console.error(\"Error retrieving songs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    handleSongCall();\n  }, [ENDPOINT]);\n  const streamSongById = async songId => {\n    try {\n      const response = await axios.get(`${ENDPOINT}/api/songs/streamSongById`, {\n        params: {\n          songId\n        },\n        responseType: 'blob' // Response as a Blob\n      });\n      const songTitle = response.headers['x-song-title'];\n      const songDescription = response.headers['x-song-description'];\n      console.log('Song Title:', songTitle);\n      console.log('Song Description:', songDescription);\n      const audioUrl = URL.createObjectURL(response.data);\n      const audioElement = new Audio(audioUrl);\n      audioElement.play();\n    } catch (error) {\n      console.error('Error streaming song:', error);\n    }\n  };\n  const playRandomSong = async () => {\n    try {\n      const response = await axios.get(`${ENDPOINT}/api/songs/random`, {\n        responseType: 'blob' // Response as a Blob\n      });\n      const songTitle = response.headers['x-song-title'];\n      const songDescription = response.headers['x-song-description'];\n      console.log('Random Song Title:', songTitle);\n      console.log('Random Song Description:', songDescription);\n      const audioUrl = URL.createObjectURL(response.data);\n      const audioElement = new Audio(audioUrl);\n      audioElement.play();\n      setRandomSong({\n        title: songTitle,\n        description: songDescription\n      });\n    } catch (error) {\n      console.error('Error playing random song:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"song-description\",\n          children: song.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-button\",\n          onClick: () => streamSongById(song.songId),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-song-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"random-button\",\n        onClick: playRandomSong,\n        children: \"Play Random Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), randomSong && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"random-song-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"song-title\",\n          children: randomSong.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"song-description\",\n          children: randomSong.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"QEnZ7CWc7aWBR+diPkD5kJrDZMk=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HomePage","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","songs","setSongs","loading","setLoading","randomSong","setRandomSong","handleSongCall","console","log","response","post","data","message","error","streamSongById","songId","get","params","responseType","songTitle","headers","songDescription","audioUrl","URL","createObjectURL","audioElement","Audio","play","playRandomSong","title","description","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","song","onClick","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    // State for songs, loading, and random song play\n    const [songs, setSongs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [randomSong, setRandomSong] = useState(null);\n\n    useEffect(() => {\n        const handleSongCall = async () => {\n            try {\n                console.log(ENDPOINT);\n                const response = await axios.post(ENDPOINT + \"/api/songs/homepagesongs\");\n                if (response.data.message === \"Success\") {\n                    console.log(\"Songs retrieved successfully:\", response.data.songs);\n                    setSongs(response.data.songs);\n                } else {\n                    console.log(\"No songs found for this user\");\n                }\n            } catch (error) {\n                console.error(\"Error retrieving songs:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        handleSongCall();\n    }, [ENDPOINT]);\n\n    const streamSongById = async (songId) => {\n        try {\n            const response = await axios.get(`${ENDPOINT}/api/songs/streamSongById`, {\n                params: { songId },\n                responseType: 'blob', // Response as a Blob\n            });\n\n            const songTitle = response.headers['x-song-title'];\n            const songDescription = response.headers['x-song-description'];\n            console.log('Song Title:', songTitle);\n            console.log('Song Description:', songDescription);\n\n            const audioUrl = URL.createObjectURL(response.data);\n            const audioElement = new Audio(audioUrl);\n            audioElement.play();\n        } catch (error) {\n            console.error('Error streaming song:', error);\n        }\n    };\n\n    const playRandomSong = async () => {\n        try {\n            const response = await axios.get(`${ENDPOINT}/api/songs/random`, {\n                responseType: 'blob', // Response as a Blob\n            });\n\n            const songTitle = response.headers['x-song-title'];\n            const songDescription = response.headers['x-song-description'];\n            console.log('Random Song Title:', songTitle);\n            console.log('Random Song Description:', songDescription);\n\n            const audioUrl = URL.createObjectURL(response.data);\n            const audioElement = new Audio(audioUrl);\n            audioElement.play();\n\n            setRandomSong({\n                title: songTitle,\n                description: songDescription,\n            });\n        } catch (error) {\n            console.error('Error playing random song:', error);\n        }\n    };\n\n    if (loading) {\n        return <p>Loading songs...</p>;\n    }\n\n    return (\n        <div className=\"homepage\">\n            <div className=\"song-list\">\n                {songs.length > 0 ? (\n                    songs.map((song) => (\n                        <div className=\"song-block\" key={song.songId}>\n                            <h2 className=\"song-title\">{song.title}</h2>\n                            <p className=\"song-description\">{song.description}</p>\n                            <button\n                                className=\"play-button\"\n                                onClick={() => streamSongById(song.songId)}\n                            >\n                                Play\n                            </button>\n                        </div>\n                    ))\n                ) : (\n                    <p>No songs to display</p>\n                )}\n            </div>\n            <div className=\"random-song-section\">\n                <button className=\"random-button\" onClick={playRandomSong}>\n                    Play Random Song\n                </button>\n                {randomSong && (\n                    <div className=\"random-song-details\">\n                        <h2 className=\"song-title\">{randomSong.title}</h2>\n                        <p className=\"song-description\">{randomSong.description}</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}