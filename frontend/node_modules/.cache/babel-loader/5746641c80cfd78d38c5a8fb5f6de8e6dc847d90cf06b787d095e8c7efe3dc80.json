{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from \"../AuthContext\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n  // error messages and songs\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentSong, setCurrentSong] = useState(null);\n  useEffect(() => {\n    const handleSongCall = async () => {\n      try {\n        console.log(ENDPOINT);\n        const response = await axios.post(ENDPOINT + \"/api/songs/homepagesongs\");\n        if (response.data.message === \"Success\") {\n          console.log(\"Songs retrieved successfully:\", response.data.songs);\n          setSongs(response.data.songs);\n        } else {\n          console.log(\"No songs found for this user\");\n        }\n      } catch (error) {\n        console.error(\"Error retrieving songs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    handleSongCall();\n  }, [ENDPOINT]);\n  const streamSongById = async songId => {\n    try {\n      // Make GET request with songId as query parameter\n      const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n        params: {\n          songId\n        },\n        headers: {},\n        responseType: 'blob'\n      });\n\n      // Get the song's metadata from response headers\n      const songTitle = response.headers['x-song-title'];\n      const songDescription = response.headers['x-song-description'];\n      console.log('Song Title:', songTitle);\n      console.log('Song Description:', songDescription);\n\n      // Create a URL for the Blob (audio file)\n      const audioUrl = URL.createObjectURL(response.data);\n\n      // Create an audio element to play the song\n      const audioElement = new Audio(audioUrl);\n      audioElement.play();\n    } catch (error) {\n      console.error('Error streaming song:', error);\n    }\n  };\n  const handlePlaySong = async songId => {\n    try {\n      const response = await axios.get(ENDPOINT + '/api/songs/streamSongById', {\n        params: {\n          songId\n        },\n        responseType: 'blob'\n      });\n      const audioUrl = URL.createObjectURL(response.data);\n      setCurrentSong(audioUrl); // Pass the song URL to the MusicPlayer\n    } catch (error) {\n      console.error('Error streaming song:', error);\n    }\n  };\n\n  // Show loading state while songs are being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading songs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song-list\",\n    children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"song-title\",\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"song-description\",\n        children: song.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: () => handlePlaySong(song.songId),\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)]\n    }, song.songId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No songs to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"OeWtouwLMzBrH+kzcLXdmUzKyzo=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Link","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","songs","setSongs","loading","setLoading","currentSong","setCurrentSong","handleSongCall","console","log","response","post","data","message","error","streamSongById","songId","get","params","headers","responseType","songTitle","songDescription","audioUrl","URL","createObjectURL","audioElement","Audio","play","handlePlaySong","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","song","title","description","onClick","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/home/HomePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../AuthContext\";\nimport axios from \"axios\";\nimport {Link, useNavigate} from 'react-router-dom';\nimport \"./HomePage.css\";\n\nfunction HomePage() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\n    // error messages and songs\n    const [songs, setSongs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentSong, setCurrentSong] = useState(null);\n\n    useEffect(() => {\n        const handleSongCall = async () => {\n            try {\n                console.log(ENDPOINT);\n                const response = await axios.post(ENDPOINT + \"/api/songs/homepagesongs\");\n                if (response.data.message === \"Success\") {\n                    console.log(\"Songs retrieved successfully:\", response.data.songs);\n                    setSongs(response.data.songs);\n                } else {\n                    console.log(\"No songs found for this user\");\n                }\n            } catch (error) {\n                console.error(\"Error retrieving songs:\", error);\n            } finally {\n                setLoading(false); \n            }\n        };\n\n        handleSongCall();\n    }, [ENDPOINT]);\n\n    const streamSongById = async (songId) => {\n        try {\n            // Make GET request with songId as query parameter\n            const response = await axios.get(ENDPOINT + `/api/songs/streamSongById`, {\n                params: { songId },\n                headers: {\n                },\n                responseType: 'blob', \n            });\n    \n            // Get the song's metadata from response headers\n            const songTitle = response.headers['x-song-title'];\n            const songDescription = response.headers['x-song-description'];\n    \n            console.log('Song Title:', songTitle);\n            console.log('Song Description:', songDescription);\n    \n            // Create a URL for the Blob (audio file)\n            const audioUrl = URL.createObjectURL(response.data);\n    \n            // Create an audio element to play the song\n            const audioElement = new Audio(audioUrl);\n            audioElement.play();\n        } catch (error) {\n            console.error('Error streaming song:', error);\n        }\n    };\n\n    const handlePlaySong = async (songId) => {\n        try {\n            const response = await axios.get(ENDPOINT + '/api/songs/streamSongById', {\n                params: { songId },\n                responseType: 'blob',\n            });\n\n            const audioUrl = URL.createObjectURL(response.data);\n            setCurrentSong(audioUrl); // Pass the song URL to the MusicPlayer\n        } catch (error) {\n            console.error('Error streaming song:', error);\n        }\n    };\n\n    // Show loading state while songs are being fetched\n    if (loading) {\n        return <p>Loading songs...</p>;\n    }\n\n    return (\n        <div className=\"song-list\">\n            {songs.length > 0 ? (\n                songs.map((song) => (\n                    <div className=\"song-block\" key={song.songId}>\n                        <h2 className=\"song-title\">{song.title}</h2>\n                        <p className=\"song-description\">{song.description}</p>\n                        <button\n                            className=\"play-button\"\n                            onClick={() => handlePlaySong(song.songId)} \n                        >\n                            Play\n                        </button>\n                    </div>\n                ))\n            ) : (\n                <p>No songs to display</p>\n            )}\n        </div>\n    );\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}