{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/user_pages/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from \"../AuthContext\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport MusicPlayer from \"../MusicPlayer/MusicPlayer\"; // Import the MusicPlayer component\nimport \"./User.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n  const {\n    authToken,\n    id\n  } = useAuth();\n  const navigate = useNavigate();\n  const [userInfo, setUserInfo] = useState(null);\n  const requestData = {\n    id: id\n  };\n\n  // error messages and songs\n  const [errorMessage, setErrorMessage] = useState('');\n  const [songs, setSongs] = useState([]);\n  const [currentSongId, setCurrentSongId] = useState(null); // To store the song ID for playing\n\n  // Effect to set error message based on authToken\n  useEffect(() => {\n    if (authToken === null) {\n      setErrorMessage(\"You are not signed in. Please log in to get songlist.\");\n    } else {\n      setErrorMessage('');\n      handleSongCall();\n      UserProfile();\n    }\n  }, [authToken]);\n  const handleSongCall = async () => {\n    try {\n      const response = await axios.post(ENDPOINT + \"/api/songs/usersongs\", requestData);\n      if (response.data.message === \"Success\") {\n        console.log(\"Songs retrieved successfully:\", response.data.songs);\n        setSongs(response.data.songs);\n      } else {\n        console.log(\"No songs found for this user\");\n      }\n    } catch (error) {\n      console.error(\"Error retrieving songs:\", error);\n    }\n  };\n  const UserProfile = async () => {\n    try {\n      const response = await axios.get(`/api/users/read/${id}`);\n      if (response.status === 200) {\n        setUserInfo(response.data.userInfo);\n      }\n    } catch (error) {\n      if (error.response) {\n        // If the response has an error status code\n        setError(error.response.data.message);\n      } else {\n        setError(\"Error fetching user profile\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!authToken && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Song List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: songs.length > 0 ? songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentSongId(song.streamId),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, song.songId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No songs to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), currentSongId && /*#__PURE__*/_jsxDEV(MusicPlayer, {\n      songId: currentSongId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(User, \"+iiOnea8NESbp74Yzd2I98EsSIo=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Link","useNavigate","MusicPlayer","jsxDEV","_jsxDEV","User","_s","ENDPOINT","process","env","REACT_APP_API_ENDPOINT","authToken","id","navigate","userInfo","setUserInfo","requestData","errorMessage","setErrorMessage","songs","setSongs","currentSongId","setCurrentSongId","handleSongCall","UserProfile","response","post","data","message","console","log","error","get","status","setError","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","song","title","description","onClick","streamId","songId","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/user_pages/User.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from \"../AuthContext\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport MusicPlayer from \"../MusicPlayer/MusicPlayer\"; // Import the MusicPlayer component\nimport \"./User.css\";\n\nfunction User() {\n    const ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n    const { authToken, id } = useAuth();\n    const navigate = useNavigate(); \n    const [userInfo, setUserInfo] = useState(null);\n\n\n    const requestData = {\n        id: id\n    };\n\n    // error messages and songs\n    const [errorMessage, setErrorMessage] = useState('');\n    const [songs, setSongs] = useState([]);\n    const [currentSongId, setCurrentSongId] = useState(null); // To store the song ID for playing\n\n    // Effect to set error message based on authToken\n    useEffect(() => {\n        if (authToken === null) {\n            setErrorMessage(\"You are not signed in. Please log in to get songlist.\");\n        } else {\n            setErrorMessage('');\n            handleSongCall();\n            UserProfile();\n        }\n    }, [authToken]);\n\n    const handleSongCall = async () => {\n        try {\n            const response = await axios.post(ENDPOINT + \"/api/songs/usersongs\", requestData);\n            if (response.data.message === \"Success\") {\n                console.log(\"Songs retrieved successfully:\", response.data.songs);\n                setSongs(response.data.songs);\n            } else {\n                console.log(\"No songs found for this user\");\n            }\n        } catch (error) {\n            console.error(\"Error retrieving songs:\", error);\n        }\n    };\n\n    const UserProfile = async () => {\n        try {\n            const response = await axios.get(`/api/users/read/${id}`);\n            if (response.status === 200) {\n                setUserInfo(response.data.userInfo);\n            }\n        } catch (error) {\n            if (error.response) {\n                // If the response has an error status code\n                setError(error.response.data.message);\n            } else {\n                setError(\"Error fetching user profile\");\n            }\n        }\n    };\n\n    \n\n    return (\n        <div>\n            {!authToken && <p className=\"errorMessage\" style={{ color: 'red' }}>{errorMessage}</p>}\n            \n            <h1>Song List</h1>\n            <div className=\"song-list\">\n                {songs.length > 0 ? (\n                    songs.map((song) => (\n                        <div className=\"song-block\" key={song.songId}>\n                            <h2>{song.title}</h2>\n                            <p>{song.description}</p>\n                            <button onClick={() => setCurrentSongId(song.streamId)}>Play</button>\n                        </div>\n                    ))\n                ) : (\n                    <p>No songs to display</p>\n                )}\n            </div>\n\n            {/* MusicPlayer Component */}\n            {currentSongId && <MusicPlayer songId={currentSongId} />}\n        </div>\n    );\n}\n\nexport default User;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}