{"ast":null,"code":"var _jsxFileName = \"/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MusicPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  songUrl\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1.0); // Default volume is max\n  const audioRef = useRef(null);\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (songUrl) {\n      audio.src = songUrl;\n      audio.play();\n      setIsPlaying(true);\n    }\n  }, [songUrl]);\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleVolumeChange = e => {\n    const audio = audioRef.current;\n    const newVolume = e.target.value;\n    setVolume(newVolume);\n    audio.volume = newVolume;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicPlayer, \"g51b3XzgohT94Tz4ZAHFqLKu1Dc=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MusicPlayer","songUrl","_s","isPlaying","setIsPlaying","volume","setVolume","audioRef","audio","current","src","play","togglePlayPause","pause","handleVolumeChange","e","newVolume","target","value","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","max","step","onChange","_c","$RefreshReg$"],"sources":["/home/dev/fall2024/cs312/musicWebsite/frontend/src/MusicPlayer/MusicPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './MusicPlayer.css';\n\nconst MusicPlayer = ({ songUrl }) => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(1.0); // Default volume is max\n    const audioRef = useRef(null);\n\n    useEffect(() => {\n        const audio = audioRef.current;\n        if (songUrl) {\n            audio.src = songUrl;\n            audio.play();\n            setIsPlaying(true);\n        }\n    }, [songUrl]);\n\n    const togglePlayPause = () => {\n        const audio = audioRef.current;\n        if (isPlaying) {\n            audio.pause();\n        } else {\n            audio.play();\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    const handleVolumeChange = (e) => {\n        const audio = audioRef.current;\n        const newVolume = e.target.value;\n        setVolume(newVolume);\n        audio.volume = newVolume;\n    };\n\n    return (\n        <div className=\"music-player\">\n            <audio ref={audioRef} />\n            <div className=\"controls\">\n                <button onClick={togglePlayPause}>\n                    {isPlaying ? 'Pause' : 'Play'}\n                </button>\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value={volume}\n                    onChange={handleVolumeChange}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default MusicPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3C,MAAMY,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAIR,OAAO,EAAE;MACTO,KAAK,CAACE,GAAG,GAAGT,OAAO;MACnBO,KAAK,CAACG,IAAI,CAAC,CAAC;MACZP,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMJ,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAIN,SAAS,EAAE;MACXK,KAAK,CAACK,KAAK,CAAC,CAAC;IACjB,CAAC,MAAM;MACHL,KAAK,CAACG,IAAI,CAAC,CAAC;IAChB;IACAP,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,MAAMW,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,MAAMP,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,MAAMO,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCZ,SAAS,CAACU,SAAS,CAAC;IACpBR,KAAK,CAACH,MAAM,GAAGW,SAAS;EAC5B,CAAC;EAED,oBACIjB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBrB,OAAA;MAAOsB,GAAG,EAAEd;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxB1B,OAAA;MAAKoB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrBrB,OAAA;QAAQ2B,OAAO,EAAEd,eAAgB;QAAAQ,QAAA,EAC5BjB,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACT1B,OAAA;QACI4B,IAAI,EAAC,OAAO;QACZC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPC,IAAI,EAAC,MAAM;QACXZ,KAAK,EAAEb,MAAO;QACd0B,QAAQ,EAAEjB;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvB,EAAA,CAjDIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}